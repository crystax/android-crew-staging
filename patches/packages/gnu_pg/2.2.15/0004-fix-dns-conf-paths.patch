diff -Naurw a/dirmngr/dns.c b/dirmngr/dns.c
--- a/dirmngr/dns.c	2019-03-25 16:42:01.000000000 +0300
+++ b/dirmngr/dns.c	2019-04-01 19:14:41.515525740 +0300
@@ -77,7 +77,10 @@
 #include <netdb.h>		/* struct addrinfo */
 #endif
 
+#include <crystax.h>
+
 #include "gpgrt.h"   /* For GGPRT_GCC_VERSION */
+#include "util.h"
 #include "dns.h"
 
 
@@ -5108,18 +5111,22 @@
 struct dns_hosts *dns_hosts_local(int *error_) {
 	struct dns_hosts *hosts;
 	int error;
+    char *hosts_file = xtryasprintf ("%/%s", crystax_posix_base (), "/etc/hosts");
 
 	if (!(hosts = dns_hosts_open(&error)))
 		goto error;
 
-	if ((error = dns_hosts_loadpath(hosts, "/etc/hosts")))
+	if ((error = dns_hosts_loadpath(hosts, hosts_file)))
 		goto error;
 
+    xfree(hosts_file);
+
 	return hosts;
 error:
 	*error_	= error;
 
 	dns_hosts_close(hosts);
+    xfree(hosts_file);
 
 	return 0;
 } /* dns_hosts_local() */
@@ -5425,11 +5432,14 @@
 struct dns_resolv_conf *dns_resconf_local(int *error_) {
 	struct dns_resolv_conf *resconf;
 	int error;
+    const char *crystax_base = crystax_posix_base ();
+    char *resolv_conf_file = xtryasprintf ("%/%s", crystax_base, "/etc/resolv.conf");
+    char *nsswitch_conf_file = xtryasprintf ("%/%s", crystax_base, "/etc/nsswitch.conf");
 
 	if (!(resconf = dns_resconf_open(&error)))
 		goto error;
 
-	if ((error = dns_resconf_loadpath(resconf, "/etc/resolv.conf"))) {
+	if ((error = dns_resconf_loadpath(resconf, resolv_conf_file))) {
 		/*
 		 * NOTE: Both the glibc and BIND9 resolvers ignore a missing
 		 * /etc/resolv.conf, defaulting to a nameserver of
@@ -5441,16 +5451,21 @@
 			goto error;
 	}
 
-	if ((error = dns_nssconf_loadpath(resconf, "/etc/nsswitch.conf"))) {
+	if ((error = dns_nssconf_loadpath(resconf, nsswitch_conf_file))) {
 		if (error != ENOENT)
 			goto error;
 	}
 
+    xfree(resolv_conf_file);
+    xfree(nsswitch_conf_file);
+
 	return resconf;
 error:
 	*error_	= error;
 
 	dns_resconf_close(resconf);
+    xfree(resolv_conf_file);
+    xfree(nsswitch_conf_file);
 
 	return 0;
 } /* dns_resconf_local() */
@@ -10456,15 +10471,21 @@
 	const char *path;
 	unsigned i;
 	int error;
+    char *resolv_conf_file;
+    char *nsswitch_conf_file;
+    const char *crystax_base = crystax_posix_base ();
 
 	if (*resconf)
 		return *resconf;
 
+    resolv_conf_file = xtryasprintf ("%/%s", crystax_base, RESOLV_CONF_NAME);
+    nsswitch_conf_file = xtryasprintf ("%/%s", crystax_base, "/etc/nsswitch.conf");
+
 	if (!(*resconf = dns_resconf_open(&error)))
 		panic("dns_resconf_open: %s", dns_strerror(error));
 
 	if (!MAIN.resconf.count)
-		MAIN.resconf.path[MAIN.resconf.count++]	= "/etc/resolv.conf";
+		MAIN.resconf.path[MAIN.resconf.count++]	= resconf_file;
 
 	for (i = 0; i < MAIN.resconf.count; i++) {
 		path	= MAIN.resconf.path[i];
@@ -10491,7 +10512,7 @@
 	}
 
 	if (!MAIN.nssconf.count) {
-		path = "/etc/nsswitch.conf";
+		path = nsswitch_conf_file;
 
 		if (!(error = dns_nssconf_loadpath(*resconf, path)))
 			MAIN.nssconf.path[MAIN.nssconf.count++] = path;
@@ -10499,6 +10520,9 @@
 			panic("%s: %s", path, dns_strerror(error));
 	}
 
+    xfree(resolv_conf_file);
+    xfree(nsswitch_conf_file);
+
 	return *resconf;
 } /* resconf() */
 
@@ -10508,17 +10532,20 @@
 	const char *path;
 	unsigned i;
 	int error;
+    char *hosts_file = 0;
 
 	if (*hosts)
 		return *hosts;
 
+    hosts_file = xtryasprintf ("%/%s", crystax_posix_base (), "/etc/hosts");
 	if (!MAIN.hosts.count) {
-		MAIN.hosts.path[MAIN.hosts.count++]	= "/etc/hosts";
+		MAIN.hosts.path[MAIN.hosts.count++]	= hosts_file;
 
 		/* Explicitly test dns_hosts_local() */
 		if (!(*hosts = dns_hosts_local(&error)))
 			panic("%s: %s", "/etc/hosts", dns_strerror(error));
 
+        xfree(hosts_file);
 		return *hosts;
 	}
 
@@ -10537,6 +10564,8 @@
 			panic("%s: %s", path, dns_strerror(error));
 	}
 
+    xfree(hosts_file);
+
 	return *hosts;
 } /* hosts() */
 
